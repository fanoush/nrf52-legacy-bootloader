diff -Naur SDK11.orig/components/libraries/bootloader_dfu/bootloader.c SDK11/components/libraries/bootloader_dfu/bootloader.c
--- SDK11.orig/components/libraries/bootloader_dfu/bootloader.c	2020-05-17 22:15:40.264414600 +0200
+++ SDK11/components/libraries/bootloader_dfu/bootloader.c	2020-05-17 23:05:24.851969200 +0200
@@ -78,10 +78,21 @@
 {
     for (;;)
     {
+#ifdef FEED_WATCHDOG
+        if ( (NRF_WDT->RUNSTATUS) && (NRF_WDT->CONFIG & (WDT_CONFIG_SLEEP_Run << WDT_CONFIG_SLEEP_Pos)) ){
+            // if watchdog is enabled while sleeping we cannot sleep via sd_app_evt_wait() here
+            uint8_t RREN = NRF_WDT->RREN;
+            volatile uint32_t *RR= &NRF_WDT->RR[0];
+            while (RREN&1) { // reload all enabled registers
+                *RR=0x6E524635; RR++; RREN >>= 1;
+            }
+        } else
+#endif
+        {
         // Wait in low power state for any events.
         uint32_t err_code = sd_app_evt_wait();
         APP_ERROR_CHECK(err_code);
-
+        }
         // Event received. Process it from the scheduler.
         app_sched_execute();
 
diff -Naur SDK11.orig/components/libraries/bootloader_dfu/dfu_init_template.c SDK11/components/libraries/bootloader_dfu/dfu_init_template.c
--- SDK11.orig/components/libraries/bootloader_dfu/dfu_init_template.c	2020-05-17 22:15:40.283415100 +0200
+++ SDK11/components/libraries/bootloader_dfu/dfu_init_template.c	2020-05-17 22:59:08.173851200 +0200
@@ -86,7 +86,7 @@
     memcpy(m_extended_packet,
            &p_init_packet->softdevice[p_init_packet->softdevice_len],
            m_extended_packet_length);
-
+#ifndef DISABLE_DFU_APPCHECK
 /** [DFU init application version] */
     // To support application versioning, this check should be updated.
     // This template allows for any application to be installed. However, 
@@ -111,7 +111,7 @@
     {
         return NRF_ERROR_INVALID_DATA;
     }
-
+#endif
     // Third check: Check the array of supported SoftDevices by this application.
     //              If the installed SoftDevice does not match any SoftDevice in the list then an
     //              error is returned.
diff -Naur SDK11.orig/components/libraries/bootloader_dfu/dfu_single_bank.c SDK11/components/libraries/bootloader_dfu/dfu_single_bank.c
--- SDK11.orig/components/libraries/bootloader_dfu/dfu_single_bank.c	2020-05-17 22:15:40.285414000 +0200
+++ SDK11/components/libraries/bootloader_dfu/dfu_single_bank.c	2020-05-17 22:59:08.176545100 +0200
@@ -658,6 +658,8 @@
         uint32_t block_size      = (boot_settings.sd_image_start - sd_start) / 2;
         uint32_t image_end       = boot_settings.sd_image_start + boot_settings.sd_image_size;
 
+        block_size = 0xD000; /* for SD 2.x */ // &= ~(uint32_t)(CODE_PAGE_SIZE - 1); //nrf52 alingment fix
+
         uint32_t img_block_start = boot_settings.sd_image_start + 2 * block_size;
         uint32_t sd_block_start  = sd_start + 2 * block_size;
         
@@ -760,6 +762,8 @@
         uint32_t image_end       = bootloader_settings.sd_image_start + 
                                    bootloader_settings.sd_image_size;
 
+        block_size= 0xD000;// &= ~(uint32_t)(CODE_PAGE_SIZE - 1); //nrf52 alingment fix
+
         uint32_t img_block_start = bootloader_settings.sd_image_start + 2 * block_size;
         uint32_t sd_block_start  = sd_start + 2 * block_size;
 
diff -Naur SDK11.orig/components/libraries/bootloader_dfu/dfu_transport_ble.c SDK11/components/libraries/bootloader_dfu/dfu_transport_ble.c
--- SDK11.orig/components/libraries/bootloader_dfu/dfu_transport_ble.c	2020-05-17 22:15:40.287413300 +0200
+++ SDK11/components/libraries/bootloader_dfu/dfu_transport_ble.c	2020-05-17 22:59:08.179542900 +0200
@@ -39,8 +39,6 @@
 #define DFU_REV_MAJOR                        0x00                                                    /** DFU Major revision number to be exposed. */
 #define DFU_REV_MINOR                        0x08                                                    /** DFU Minor revision number to be exposed. */
 #define DFU_REVISION                         ((DFU_REV_MAJOR << 8) | DFU_REV_MINOR)                  /** DFU Revision number to be exposed. Combined of major and minor versions. */
-#define ADVERTISING_LED_PIN_NO               BSP_LED_0                                               /**< Is on when device is advertising. */
-#define CONNECTED_LED_PIN_NO                 BSP_LED_1                                               /**< Is on when device has connected. */
 #define DFU_SERVICE_HANDLE                   0x000C                                                  /**< Handle of DFU service when DFU service is first service initialized. */
 #define BLE_HANDLE_MAX                       0xFFFF                                                  /**< Max handle value is BLE. */
 
@@ -108,8 +106,10 @@
 static bool                 m_pkt_rcpt_notif_enabled = false;                                        /**< Variable to denote whether packet receipt notification has been enabled by the DFU controller.*/
 static uint16_t             m_conn_handle            = BLE_CONN_HANDLE_INVALID;                      /**< Handle of the current connection. */
 static bool                 m_is_advertising         = false;                                        /**< Variable to indicate if advertising is ongoing.*/
+#ifndef DISABLE_BUTTONLESS_DFU
 static dfu_ble_peer_data_t  m_ble_peer_data;                                                         /**< BLE Peer data exchanged from application on buttonless update mode. */
 static bool                 m_ble_peer_data_valid    = false;                                        /**< True if BLE Peer data has been exchanged from application. */
+#endif
 static uint32_t             m_direct_adv_cnt         = APP_DIRECTED_ADV_TIMEOUT;                     /**< Counter of direct advertisements. */
 static uint8_t            * mp_final_packet;                                                         /**< Pointer to final data packet received. When callback for succesful packet handling is received from dfu bank handling a transfer complete response can be sent to peer. */
 
@@ -132,6 +132,7 @@
         return NRF_ERROR_INVALID_STATE;
     }
 
+#ifndef DISABLE_BUTTONLESS_DFU
     if (m_ble_peer_data_valid)
     {
         err_code = sd_ble_gatts_sys_attr_set(m_conn_handle,
@@ -157,6 +158,7 @@
         }
     }
     else
+#endif
     {
         err_code = sd_ble_gatts_sys_attr_set(m_conn_handle, NULL, 0, 0);
     }
@@ -685,7 +687,7 @@
 
         // Initialize advertising parameters (used when starting advertising).
         memset(&m_adv_params, 0, sizeof(m_adv_params));
-
+#ifndef DISABLE_BUTTONLESS_DFU
         if (m_ble_peer_data_valid)
         {
             ble_gap_irk_t empty_irk = {{0}};
@@ -722,6 +724,7 @@
             }
         }
         else
+#endif
         {
             advertising_init(BLE_GAP_ADV_FLAGS_LE_ONLY_GENERAL_DISC_MODE);
             m_adv_params.type        = BLE_GAP_ADV_TYPE_ADV_IND;
@@ -734,7 +737,7 @@
         err_code = sd_ble_gap_adv_start(&m_adv_params);
         APP_ERROR_CHECK(err_code);
 
-        nrf_gpio_pin_clear(ADVERTISING_LED_PIN_NO);
+        LED_ON(ADVERTISING_LED_PIN_NO);
 
         m_is_advertising = true;
     }
@@ -752,7 +755,7 @@
         err_code = sd_ble_gap_adv_stop();
         APP_ERROR_CHECK(err_code);
 
-        nrf_gpio_pin_set(ADVERTISING_LED_PIN_NO);
+        LED_OFF(ADVERTISING_LED_PIN_NO);
 
         m_is_advertising = false;
     }
@@ -771,8 +774,8 @@
     switch (p_ble_evt->header.evt_id)
     {
         case BLE_GAP_EVT_CONNECTED:
-            nrf_gpio_pin_clear(CONNECTED_LED_PIN_NO);
-            nrf_gpio_pin_set(ADVERTISING_LED_PIN_NO);
+            LED_ON(CONNECTED_LED_PIN_NO);
+            LED_OFF(ADVERTISING_LED_PIN_NO);
 
             m_conn_handle    = p_ble_evt->evt.gap_evt.conn_handle;
             m_is_advertising = false;
@@ -784,7 +787,7 @@
                 uint16_t sys_attr_len = 128;
             
                 m_direct_adv_cnt = APP_DIRECTED_ADV_TIMEOUT;
-                nrf_gpio_pin_set(CONNECTED_LED_PIN_NO);
+                LED_OFF(CONNECTED_LED_PIN_NO);
         
                 err_code = sd_ble_gatts_sys_attr_get(m_conn_handle, 
                                                      sys_attr, 
@@ -805,6 +808,7 @@
             m_conn_handle = BLE_CONN_HANDLE_INVALID;
 
             break;
+#ifndef DISABLE_BUTTONLESS_DFU
 
         case BLE_GAP_EVT_SEC_PARAMS_REQUEST:
             {
@@ -826,7 +830,7 @@
                 APP_ERROR_CHECK(err_code);
             }
             break;
-
+#endif
         case BLE_GATTS_EVT_TIMEOUT:
             if (p_ble_evt->evt.gatts_evt.params.timeout.src == BLE_GATT_TIMEOUT_SRC_PROTOCOL)
             {
@@ -886,6 +890,7 @@
             }
             break;
 
+#ifndef DISABLE_BUTTONLESS_DFU
         case BLE_GAP_EVT_SEC_INFO_REQUEST:
             {
                 ble_gap_enc_info_t * p_enc_info = NULL;
@@ -904,6 +909,7 @@
                 APP_ERROR_CHECK(err_code);
             }
             break;
+#endif
 
         case BLE_GATTS_EVT_SYS_ATTR_MISSING:
         case BLE_GAP_EVT_CONN_SEC_UPDATE:
@@ -938,19 +944,6 @@
 }
 
 
-/**@brief       Function for the LEDs initialization.
- *
- * @details     Initializes all LEDs used by this application.
- */
-static void leds_init(void)
-{
-    nrf_gpio_cfg_output(ADVERTISING_LED_PIN_NO);
-    nrf_gpio_cfg_output(CONNECTED_LED_PIN_NO);
-    nrf_gpio_pin_set(ADVERTISING_LED_PIN_NO);
-    nrf_gpio_pin_set(CONNECTED_LED_PIN_NO);
-}
-
-
 /**@brief     Function for the GAP initialization.
  *
  * @details   This function will setup all the necessary GAP (Generic Access Profile) parameters of
@@ -1036,8 +1029,6 @@
     m_tear_down_in_progress = false;
     m_pkt_type              = PKT_TYPE_INVALID;
 
-    leds_init();
-
     err_code = softdevice_ble_evt_handler_set(ble_evt_dispatch);
     VERIFY_SUCCESS(err_code);
 
@@ -1045,13 +1036,14 @@
 
     err_code = hci_mem_pool_open();
     VERIFY_SUCCESS(err_code);
-
+#ifndef DISABLE_BUTTONLESS_DFU
     err_code = dfu_ble_peer_data_get(&m_ble_peer_data);
     if (err_code == NRF_SUCCESS)
     {
         m_ble_peer_data_valid = true;
     }
     else
+#endif
     {
         ble_gap_addr_t addr;
 
diff -Naur SDK11.orig/components/libraries/bootloader_dfu/dfu_types.h SDK11/components/libraries/bootloader_dfu/dfu_types.h
--- SDK11.orig/components/libraries/bootloader_dfu/dfu_types.h	2020-05-17 22:15:40.290413800 +0200
+++ SDK11/components/libraries/bootloader_dfu/dfu_types.h	2020-05-17 23:07:43.384735300 +0200
@@ -58,7 +58,9 @@
         
 #elif NRF52     
         
+#ifndef BOOTLOADER_REGION_START
 #define BOOTLOADER_REGION_START             0x0007A000                  /**< This field should correspond to start address of the bootloader, found in UICR.RESERVED, 0x10001014, register. This value is used for sanity check, so the bootloader will fail immediately if this value differs from runtime value. The value is used to determine max application size for updating. */
+#endif
 #define BOOTLOADER_SETTINGS_ADDRESS         0x0007F000                  /**< The field specifies the page location of the bootloader settings address. */
 #define BOOTLOADER_MBR_PARAMS_PAGE_ADDRESS  0x0007E000                  /**< The field specifies the page location of the mbr params page address. */
         
diff -Naur SDK11.orig/components/toolchain/gcc/gcc_startup_nrf52.s SDK11/components/toolchain/gcc/gcc_startup_nrf52.s
--- SDK11.orig/components/toolchain/gcc/gcc_startup_nrf52.s	2020-05-17 22:15:41.049922900 +0200
+++ SDK11/components/toolchain/gcc/gcc_startup_nrf52.s	2020-05-17 22:59:08.182584000 +0200
@@ -130,6 +130,7 @@
     .long   0                           /*Reserved */
     .long   0                           /*Reserved */
     .long   0                           /*Reserved */
+#ifndef SMALL_INTERRUPT_VECTORS
     .long   0                           /*Reserved */
     .long   0                           /*Reserved */
     .long   0                           /*Reserved */
@@ -147,6 +148,7 @@
     .long   0                           /*Reserved */
     .long   0                           /*Reserved */
     .long   0                           /*Reserved */
+
     .long   0                           /*Reserved */
     .long   0                           /*Reserved */
     .long   0                           /*Reserved */
@@ -322,7 +324,7 @@
     .long   0                           /*Reserved */
     .long   0                           /*Reserved */
     .long   0                           /*Reserved */
-
+#endif
     .size __isr_vector, . - __isr_vector
 
 /* Reset Handler */
